# -*- coding: utf-8 -*-
"""reservation_system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bd6w_EFAGenVBrf34rEA1ru1GNpM6wTY
"""

import json

class HotelReservationSystem:
    def __init__(self):
        self.hotels = self.load_hotels()

    def load_hotels(self):
        try:
            with open('hotels.json', 'r') as file:
                hotels = json.load(file)
        except FileNotFoundError:
            hotels = []
        return hotels

    def save_hotels(self):
        with open('hotels.json', 'w') as file:
            json.dump(self.hotels, file, indent=4)

    def create_hotel(self):
        name = input("Enter hotel name: ")
        location = input("Enter hotel location: ")
        phone_number = input("Enter hotel phone number: ")
        available_rooms = []
        while True:
            room_number = input("Enter room number (or enter 'done' to finish): ")
            if room_number.lower() == 'done':
                break
            room_type = input("Enter room type: ")
            price = float(input("Enter room price: "))
            is_available = input("Enter room availability (True/False): ").lower() == 'true'
            room_info = {
                "room_number": room_number,
                "room_type": room_type,
                "price": price,
                "is_available": is_available
            }
            available_rooms.append(room_info)

        hotel_info = {
            "name": name,
            "location": location,
            "phone_number": phone_number,
            "available_rooms": available_rooms
        }
        self.hotels.append(hotel_info)
        self.save_hotels()
        print("Hotel created successfully.")

    def delete_hotel(self, name):
        for hotel in self.hotels:
            if hotel["name"] == name:
                self.hotels.remove(hotel)
                self.save_hotels()
                print("Hotel deleted successfully.")
                return
        print("Hotel not found.")

    def display_hotel(self, name):
        for hotel in self.hotels:
            if hotel["name"] == name:
                print(json.dumps(hotel, indent=4))
                return
        print("Hotel not found.")

    def modify_hotel(self, name):
        for hotel in self.hotels:
            if hotel["name"] == name:
                print("Current information:")
                print(json.dumps(hotel, indent=4))
                hotel["name"] = input(f"Enter hotel name [{hotel['name']}]: ") or hotel["name"]
                hotel["location"] = input(f"Enter hotel location [{hotel['location']}]: ") or hotel["location"]
                hotel["phone_number"] = input(f"Enter hotel phone number [{hotel['phone_number']}]: ") or hotel["phone_number"]
                self.save_hotels()
                print("Hotel information modified successfully.")
                return
        print("Hotel not found.")

    def reserve_room(self, name, room_number_input):
        room_number = int(room_number_input)
        for hotel in self.hotels:
            if hotel["name"] == name:
                for room in hotel["available_rooms"]:
                    if room["room_number"] == room_number:
                        if room["is_available"]:
                            room["is_available"] = False
                            self.save_hotels()
                            print("Room reserved successfully.")
                        else:
                            print("Room is already reserved.")
                        return
                print("Room number not found.")
                return
        print("Hotel not found.")

    def cancel_reservation(self, name, room_number_input):
        room_number = int(room_number_input)
        for hotel in self.hotels:
            if hotel["name"] == name:
                for room in hotel["available_rooms"]:
                    if room["room_number"] == room_number:
                        if not room["is_available"]:
                            room["is_available"] = True
                            self.save_hotels()
                            print("Reservation canceled successfully.")
                        else:
                            print("Room is not reserved.")
                        return
                print("Room number not found.")
                return
        print("Hotel not found.")

    def display_all_hotels(self):
        if self.hotels:
            for hotel in self.hotels:
                print(json.dumps(hotel, indent=4))
        else:
            print("No hotels found.")

    def main_menu(self):
        while True:
            print("\nWelcome to Reservation Hotel System")
            print("1. Create Hotel")
            print("2. Delete Hotel")
            print("3. Display Hotel Information")
            print("4. Modify Hotel Information")
            print("5. Reserve Room")
            print("6. Cancel Reservation")
            print("7. Display All Hotels")
            print("8. Exit")
            choice = input("Enter your choice: ")

            if choice == '1':
                self.create_hotel()
            elif choice == '2':
                name = input("Enter hotel name to delete: ")
                self.delete_hotel(name)
            elif choice == '3':
                name = input("Enter hotel name to display: ")
                self.display_hotel(name)
            elif choice == '4':
                name = input("Enter hotel name to modify: ")
                self.modify_hotel(name)
            elif choice == '5':
                name = input("Enter hotel name: ")
                room_number = input("Enter room number to reserve: ")
                self.reserve_room(name, room_number)
            elif choice == '6':
                name = input("Enter hotel name: ")
                room_number = input("Enter room number to cancel reservation: ")
                self.cancel_reservation(name, room_number)
            elif choice == '7':
                self.display_all_hotels()
            elif choice == '8':
                print("Exiting program.")
                break
            else:
                print("Invalid choice. Please try again.")

if __name__ == "__main__":
    system = HotelReservationSystem()
    system.main_menu()

import json
import os

class CustomerSystem:
    def __init__(self):
        self.file_path = 'customers.json'
        self.customers = self.load_customers()

    def load_customers(self):
        """
        Load customers from the JSON file.
        """
        if os.path.exists(self.file_path):
            with open(self.file_path, 'r') as file:
                return json.load(file)
        else:
            return []

    def save_customers(self):
        """
        Save customers to the JSON file.
        """
        with open(self.file_path, 'w') as file:
            json.dump(self.customers, file, indent=4)

    def create_customer(self):
        """
        Create a new customer.
        """
        name = input("Enter customer name: ")
        customer_id = input("Enter customer ID: ")
        email = input("Enter customer email: ")
        phone_number = input("Enter customer phone number: ")
        customer = {
            "customer_id": customer_id,
            "name": name,
            "email": email,
            "phone_number": phone_number
        }
        self.customers.append(customer)
        self.save_customers()
        print("Customer created successfully.")

    def delete_customer(self, customer_id):
        """
        Delete a customer by customer ID.
        """
        for customer in self.customers:
            if customer["customer_id"] == customer_id:
                self.customers.remove(customer)
                self.save_customers()
                print("Customer deleted successfully.")
                return
        print("Customer not found.")

    def display_customer(self, customer_id):
        """
        Display information of a selected customer by customer ID.
        """
        for customer in self.customers:
            if customer["customer_id"] == customer_id:
                print("Customer Information:")
                print(f"Name: {customer['name']}")
                print(f"ID: {customer['customer_id']}")
                print(f"Email: {customer['email']}")
                print(f"Phone Number: {customer['phone_number']}")
                return
        print("Customer not found.")

    def modify_customer(self, customer_id):
        """
        Modify information of a selected customer by customer ID.
        """
        for customer in self.customers:
            if customer["customer_id"] == customer_id:
                print("Current customer information:")
                print(f"Name: {customer['name']}")
                print(f"ID: {customer['customer_id']}")
                print(f"Email: {customer['email']}")
                print(f"Phone Number: {customer['phone_number']}")
                customer["name"] = input(f"Enter new name [{customer['name']}]: ") or customer["name"]
                customer["email"] = input(f"Enter new email [{customer['email']}]: ") or customer["email"]
                customer["phone_number"] = input(f"Enter new phone number [{customer['phone_number']}]: ") or customer["phone_number"]
                self.save_customers()
                print("Customer information modified successfully.")
                return
        print("Customer not found.")

    def display_all_customers(self):
        """
        Display information of all customers.
        """
        print("All Customers:")
        for customer in self.customers:
            print(f"Name: {customer['name']}, ID: {customer['customer_id']}")

def main():
    customer_system = CustomerSystem()
    while True:
        print("\nWelcome to Customer System")
        print("1. Create Customer")
        print("2. Delete Customer")
        print("3. Display Customer Information")
        print("4. Modify Customer Information")
        print("5. Display All Customers")
        print("6. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            customer_system.create_customer()
        elif choice == '2':
            customer_id = input("Enter customer ID to delete: ")
            customer_system.delete_customer(customer_id)
        elif choice == '3':
            customer_id = input("Enter customer ID to display: ")
            customer_system.display_customer(customer_id)
        elif choice == '4':
            customer_id = input("Enter customer ID to modify: ")
            customer_system.modify_customer(customer_id)
        elif choice == '5':
            customer_system.display_all_customers()
        elif choice == '6':
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()

import json

class HotelReservationSystem:
    def __init__(self):
        self.hotels = self.load_hotels()
        self.customers = self.load_customers()

    def load_hotels(self):
        try:
            with open('hotels.json', 'r') as file:
                hotels = json.load(file)
        except FileNotFoundError:
            hotels = []
        return hotels

    def load_customers(self):
        try:
            with open('customers.json', 'r') as file:
                customers = json.load(file)
        except FileNotFoundError:
            customers = []
        return customers

    def save_hotels(self):
        with open('hotels.json', 'w') as file:
            json.dump(self.hotels, file, indent=4)

    def save_customers(self):
        with open('customers.json', 'w') as file:
            json.dump(self.customers, file, indent=4)

    def display_hotels(self):
        if self.hotels:
            for hotel in self.hotels:
                print(json.dumps(hotel, indent=4))
        else:
            print("No hotels found.")

    def display_customers(self):
        if self.customers:
            for customer in self.customers:
                print(json.dumps(customer, indent=4))
        else:
            print("No customers found.")

    def reserve_room(self, hotel_name, customer_id, room_number):
        for hotel in self.hotels:
            if hotel["name"] == hotel_name:
                for room in hotel["available_rooms"]:
                    if room["room_number"] == room_number and room["is_available"]:
                        for customer in self.customers:
                            if customer["customer_id"] == customer_id:
                                reservation_info = {
                                    "hotel_name": hotel_name,
                                    "room_number": room_number,
                                    "customer_id": customer_id
                                }
                                hotel["reservations"].append(reservation_info)
                                room["is_available"] = False
                                self.save_hotels()
                                print("Room reserved successfully.")
                                return
                        print("Customer not found.")
                        return
                print("Room not available.")
                return
        print("Hotel not found.")

    def cancel_reservation(self, hotel_name, customer_id, room_number):
        for hotel in self.hotels:
            if hotel["name"] == hotel_name:
                for reservation in hotel["reservations"]:
                    if reservation["customer_id"] == customer_id and reservation["room_number"] == room_number:
                        reservation_to_cancel = reservation
                        for room in hotel["available_rooms"]:
                            if room["room_number"] == room_number:
                                room["is_available"] = True
                                hotel["reservations"].remove(reservation_to_cancel)
                                self.save_hotels()
                                print("Reservation canceled successfully.")
                                return
                        print("Room not found.")
                        return
                print("Reservation not found.")
                return
        print("Hotel not found.")

class Hotel:
    def __init__(self, name, location, phone_number, available_rooms):
        self.name = name
        self.location = location
        self.phone_number = phone_number
        self.available_rooms = available_rooms
        self.reservations = []

class Customer:
    def __init__(self, customer_id, name, email, phone_number):
        self.customer_id = customer_id
        self.name = name
        self.email = email
        self.phone_number = phone_number

def main():
    system = HotelReservationSystem()

    while True:
        print("\nWelcome to Reservation Hotel System")
        print("1. Display Hotels")
        print("2. Display Customers")
        print("3. Reserve Room")
        print("4. Cancel Reservation")
        print("5. Exit")
        choice = input("Enter your choice: ")

        if choice == '1':
            system.display_hotels()
        elif choice == '2':
            system.display_customers()
        elif choice == '3':
            hotel_name = input("Enter hotel name: ")
            customer_id = input("Enter customer ID: ")
            room_number = int(input("Enter room number to reserve: "))
            system.reserve_room(hotel_name, customer_id, room_number)
        elif choice == '4':
            hotel_name = input("Enter hotel name: ")
            customer_id = input("Enter customer ID: ")
            room_number = int(input("Enter room number to cancel reservation: "))
            system.cancel_reservation(hotel_name, customer_id, room_number)
        elif choice == '5':
            print("Exiting program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()